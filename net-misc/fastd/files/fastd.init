#!/sbin/runscript
# Copyright 1999-2007 Gentoo Foundation
# Modified to match fastd by Gordon Quad <gordon@niflheim.info>
# Distributed under the terms of the GNU General Public License v2

VPNDIR=${VPNDIR:-/etc/fastd}
VPN=${SVCNAME#*.}
if [ -n "${VPN}" ] && [ ${SVCNAME} != "fastd" ]; then
	VPNPID="/var/run/fastd.${VPN}.pid"
else
	VPNPID="/var/run/fastd.pid"
fi
VPNCONF="${VPNDIR}/${VPN}.conf"

depend() {
	need localmount net
	use dns
	after bootmisc
}

checkconfig() {
	# Linux has good dynamic tun/tap creation
	if [ $(uname -s) = "Linux" ] ; then
		if [ ! -e /dev/net/tun ]; then
			if ! modprobe tun ; then
				eerror "TUN/TAP support is not available" \
					"in this kernel"
				return 1
			fi
		fi
		if [ -h /dev/net/tun ] && [ -c /dev/misc/net/tun ]; then
			ebegin "Detected broken /dev/net/tun symlink, fixing..."
			rm -f /dev/net/tun
			ln -s /dev/misc/net/tun /dev/net/tun
			eend $?
		fi
		return 0
	fi

	# Other OS's don't, so we rely on a pre-configured interface
	# per vpn instance
	local ifname=$(sed -n -e 's/[[:space:]]*interface[[:space:]]+"\([^[:space:]]*\)";.*/\1/p' "${VPNCONF}")
	if [ -z ${ifname} ] ; then
		eerror "You need to specify the interface that this fastd" \
			"instance should use" \
			"by using the interface option in ${VPNCONF}"
		return 1
	fi

	if ! ifconfig "${ifname}" >/dev/null 2>/dev/null ; then
		# Try and create it
		echo > /dev/"${ifname}" >/dev/null
	fi
	if ! ifconfig "${ifname}" >/dev/null 2>/dev/null ; then
		eerror "${VPNCONF} requires interface ${ifname}" \
			"but that does not exist"
		return 1
	fi
}

start() {
	ebegin "Starting ${SVCNAME}"

	checkconfig || return 1

	start-stop-daemon --start --exec /usr/bin/fastd --chdir ${VPNDIR} --pidfile "${VPNPID}" \
		-- --config "${VPNCONF}" --pid-file "${VPNPID}" --daemon
	eend $? "Check your logs to see why startup failed"
}

stop() {
	ebegin "Stopping ${SVCNAME}"
	start-stop-daemon --stop --quiet \
		--exec /usr/bin/fastd --pidfile "${VPNPID}"
	eend $?
}

# vim: set ts=4 :
